<Window x:Class="Unverum.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        Background="#131313"
        Title="Unverum" SizeChanged="OnResize"
        mc:Ignorable="d" Closing="Window_Closing" WindowStartupLocation="CenterScreen"
        Height="750" Width="1050" MinHeight="750" MinWidth="1050" Loaded="WindowLoaded">
    <Window.Resources>
        <FontFamily x:Key="Monospace">../Assets/#Roboto Mono</FontFamily>
        <DataTemplate x:Key="ModTemplate">
            <Border CornerRadius="5" Margin="5">
                <Border.BorderBrush>
                    <SolidColorBrush Color="#101010" Opacity="0.75"/>
                </Border.BorderBrush>
                <Border.Background>
                    <SolidColorBrush Color="#101010" Opacity="0.75"/>
                </Border.Background>
                <Grid VerticalAlignment="Center" x:Name="GridItem" Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock VerticalAlignment="Center" Panel.ZIndex="4" FontSize="40" FontWeight="Bold" HorizontalAlignment="Center" Text="SPOILER" Foreground="#f2f2f2">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSpoiler}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Rectangle Height="172" Panel.ZIndex="3" Fill="#202020" Opacity="0.99" Stretch="UniformToFill" Margin="5,10,5,5" VerticalAlignment="Center">
                        <Rectangle.Style>
                            <Style TargetType="{x:Type Rectangle}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSpoiler}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                    <Image Margin="5,10,5,5" Source="{Binding Path=Image,Mode=OneWay,IsAsync=True}" Height="168" Panel.ZIndex="2"  VerticalAlignment="Center" Stretch="Uniform">
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="5" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSpoiler}" Value="False">
                                        <Setter Property="Effect" Value="{x:Null}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Rectangle Height="168" Panel.ZIndex="1" Fill="Black" Stretch="UniformToFill" Margin="5,10,5,5" VerticalAlignment="Center">
                        <Rectangle.OpacityMask>
                            <ImageBrush ImageSource="{Binding Path=Image,Mode=OneWay,IsAsync=True}"/>
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock x:Name="Title" Margin="5" Grid.Row="1" FontWeight="Bold" TextTrimming="WordEllipsis" Background="Transparent" VerticalAlignment="Center"  Foreground="#f2f2f2" Text="{Binding Path=Title}"/>
                    <Popup PlacementTarget="{Binding ElementName=Title}" IsOpen="{Binding IsMouseDirectlyOver, ElementName=Title, Mode=OneWay}" AllowsTransparency="True">
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Text="{Binding Path=Title}" Foreground="#f2f2f2" FontWeight="Bold" FontSize="18" VerticalAlignment="Center" />
                        </Border>
                    </Popup>
                    <fa5:ImageAwesome Name="LoadingBar" Foreground="#006ac1" Grid.Row="0" Icon="Solid_Spinner" Height="50" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
                    <StackPanel Grid.Row="2" Margin="10,-5,10,5" Orientation="Horizontal">
                        <Image VerticalAlignment="Center" Source="{Binding Path=Owner.Avatar}" Margin="0,0,10,0" Height="35"/>
                        <TextBlock VerticalAlignment="Center" Foreground="#909090" Text="{Binding Path=Owner.Name}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Owner.HasUpic}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Image VerticalAlignment="Center" Source="{Binding Path=Owner.Upic}" Height="25"/>
                    </StackPanel>
                    <Grid Name="CatGrid" HorizontalAlignment="Center" Grid.Row="5" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Name="CatIcon" Grid.Column="0" VerticalAlignment="Center" Source="{Binding Path=Category.Icon}" Margin="0,0,10,0" Stretch="Uniform" Height="35" Width="35"/>
                        <TextBlock Name="CatText" Grid.ColumnSpan="2" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=CategoryName}" TextTrimming="WordEllipsis">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Grid.Column" Value="1"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Category.HasIcon}" Value="False">
                                            <Setter Property="Grid.Column" Value="0"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Popup PlacementTarget="{Binding ElementName=CatGrid}" HorizontalAlignment="Center" AllowsTransparency="True">
                            <Popup.Style>
                                <Style TargetType="Popup">
                                    <Setter Property="IsOpen" Value="True"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=CatGrid}" Value="False"/>
                                                <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=CatIcon}" Value="False" />
                                                <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=CatText}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsOpen" Value="False"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Style>
                            <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#101010" Opacity="0.9"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush Color="#101010" Opacity="0.9"/>
                                </Border.Background>
                                <Grid HorizontalAlignment="Center" Margin="10" Grid.Row="5" Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" VerticalAlignment="Center" Source="{Binding Path=Category.Icon}" Margin="0,0,10,0" Stretch="Uniform" Height="35" />
                                    <TextBlock Grid.ColumnSpan="2" VerticalAlignment="Center" FontSize="18" FontWeight="SemiBold" Foreground="#f2f2f2" Text="{Binding Path=CategoryName}" >
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Grid.Column" Value="0"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Category.HasIcon}" Value="True">
                                                        <Setter Property="Grid.Column" Value="1"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <Popup MaxWidth="400" PlacementTarget="{Binding ElementName=Desc}" AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Setter Property="IsOpen" Value="False"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=Desc, Mode=OneWay}" Value="True"/>
                                            <Condition Binding="{Binding Path=HasDescription}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Text="{Binding Path=Description}" Foreground="#f2f2f2" TextWrapping="Wrap" FontSize="18" VerticalAlignment="Center" />
                        </Border>
                    </Popup>
                    <TextBlock Name="Desc" Margin="5,0,5,2" TextWrapping="Wrap" Grid.Row="3" Height="50" TextTrimming="WordEllipsis" Background="Transparent" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=Description}"/>
                    <StackPanel Grid.Row="6" Margin="0,0,0,5"  HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel Background="Transparent" Name="DateAddedPanel" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HasUpdates}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <fa5:ImageAwesome Name="DateAddedIcon" Margin="0,0,5,0" Height="15" Icon="Solid_Plus" Foreground="#f2f2f2"/>
                            <TextBlock Name="DateAddedText" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=DateAddedFormatted}" />
                        </StackPanel>
                        <StackPanel Background="Transparent" Name="DateUpdatedPanel" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center"  >
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=HasUpdates}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <fa5:ImageAwesome Name="DateUpdatedIcon" Margin="0,0,5,0" Height="15" Icon="Solid_Sync" Foreground="#f2f2f2"/>
                            <TextBlock Name="DateUpdatedText" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=DateUpdatedAgo}"/>
                        </StackPanel>
                    </StackPanel>
                    <Popup PlacementTarget="{Binding ElementName=DateAddedPanel}" HorizontalAlignment="Center" AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Setter Property="IsOpen" Value="True"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateAddedPanel}" Value="False"/>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateAddedIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateAddedText}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="False"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Foreground="#f2f2f2" FontWeight="Bold" FontSize="18" VerticalAlignment="Center" Text="{Binding Path=DateAdded,StringFormat={}Added {0}}"/>
                        </Border>
                    </Popup>
                    <Popup PlacementTarget="{Binding ElementName=DateUpdatedPanel}" HorizontalAlignment="Center" AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Setter Property="IsOpen" Value="True"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateUpdatedPanel}" Value="False"/>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateUpdatedIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DateUpdatedText}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="False"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Foreground="#f2f2f2" FontWeight="Bold" FontSize="18" VerticalAlignment="Center" Text="{Binding Path=DateUpdated,StringFormat={}Updated {0}}"/>
                        </Border>
                    </Popup>
                    <StackPanel Name="StatPanel" Background="Transparent" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="4">
                        <fa5:ImageAwesome Name="DownloadIcon" Margin="0,0,5,0" Height="15" Icon="Solid_Download" Foreground="#f2f2f2"/>
                        <TextBlock Name="DownloadText" Margin="5,0,10,0" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=DownloadString}" />
                        <fa5:ImageAwesome Name="LikeIcon" Margin="5,0,5,0" Height="15" Icon="Solid_Heart" Foreground="#f2f2f2"/>
                        <TextBlock Name="LikeText" Margin="5,0,10,0" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=LikeString}" />
                        <fa5:ImageAwesome Name="ViewIcon" Margin="5,0,5,0" Height="15" Icon="Solid_Eye" Foreground="#f2f2f2"/>
                        <TextBlock Name="ViewText" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="#f2f2f2" Text="{Binding Path=ViewString}" />
                    </StackPanel>
                    <Popup PlacementTarget="{Binding ElementName=StatPanel}" HorizontalAlignment="Center" AllowsTransparency="True">
                        <Popup.Style>
                            <Style TargetType="Popup">
                                <Setter Property="IsOpen" Value="True"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=StatPanel}" Value="False"/>
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DownloadIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=DownloadText}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=LikeIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=LikeText}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=ViewIcon}" Value="False" />
                                            <Condition Binding="{Binding IsMouseDirectlyOver, ElementName=ViewText}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsOpen" Value="False"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Popup.Style>
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Foreground="#f2f2f2" FontWeight="Bold" FontSize="18" VerticalAlignment="Center" >
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0:N0} Downloads • {1:N0} Likes • {2:N0} Views">
                                        <Binding Path="Downloads"/>
                                        <Binding Path="Likes"/>
                                        <Binding Path="Views"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                    </Popup>
                    <Grid Grid.Row="7" Margin="5,5,5,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Foreground="#f2f2f2" FontWeight="Bold" Height="30" Width="95" Background="#303030" BorderBrush="#353535" VerticalAlignment="Bottom" Content="More Info" Click="MoreInfo_Click"/>
                        <Button Grid.Column="1" Foreground="#f2f2f2" FontWeight="Bold" Height="30" Width="95" Background="#303030" BorderBrush="#353535" VerticalAlignment="Top" Content="Download" IsEnabled="{Binding Path=Compatible}" Click="Download_Click"/>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>

    </Window.Resources>
    <Grid>
        <StackPanel Panel.ZIndex="3" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.ColumnSpan="5">
            <StackPanel Background="Transparent" Margin="0,0,5,0" Orientation="Horizontal" Name="DiscordButton" PreviewMouseLeftButtonDown="Discord_Click" Cursor="Hand">
                <fa5:ImageAwesome Icon="Brands_Discord" Height="27" Foreground="#f2f2f2"/>
                <TextBlock Text="Join the Discord!" FontSize="18" Margin="5" Background="Transparent" Foreground="#f2f2f2" FontWeight="Bold"/>
            </StackPanel>
            <TextBox BorderThickness="0" FontSize="18" Margin="5" Background="Transparent" BorderBrush="Transparent" IsReadOnly="True" Foreground="#f2f2f2" FontWeight="Bold" Name="Stats" />
        </StackPanel>
        <TabControl Grid.ColumnSpan="5" Background="#202020" BorderBrush="#353535">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Border x:Name="Spacer"
                                        Width="Auto" Height="Auto"
                                        Margin="0,0,0,0" Padding="0,0,0,0"
                                        BorderBrush="Transparent" BorderThickness="0">
                                    <Border x:Name="Border"
                                            Width="Auto" MinWidth="100" MinHeight="30"
                                            VerticalAlignment="Bottom"
                                            Background="#1d1d1d" BorderBrush="#353535" BorderThickness="0,0,0,0" CornerRadius="6,6,0,0"
                                            Cursor="Hand">
                                        <ContentPresenter x:Name="ContentSite"
                                                          Width="Auto" Height="Auto"
                                                          Margin="8,3,8,3" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                          ContentSource="Header" TextElement.FontFamily="Arial" TextElement.FontWeight="Bold" TextElement.FontSize="15pt" TextElement.Foreground="#f2f2f2"/>
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                     Value="True">
                                        <Setter TargetName="Border"
                                        Property="Background"
                                        Value="#353535" />
                                    </Trigger>
                                    <Trigger Property="IsSelected"
                                     Value="True">
                                        <Setter TargetName="Border"
                                        Property="Background"
                                        Value="#353535" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Name="ModManager" Selector.Selected="OnManagerTabSelected" FontSize="18" HorizontalAlignment="Center" Header="Manage Mods">
                <TabItem.Content>
                    <Grid Name="MainGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="1.6*" MinHeight="100"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition MinHeight="100"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1.75*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Margin="10,0,0,0" Name="GameBox" Height="35" MinWidth="250" FontSize="18" FontWeight="Bold" SelectionChanged="GameBox_SelectionChanged" DropDownClosed="GameBox_DropDownClosed">
                            <ComboBoxItem xml:space="preserve" IsSelected="True"> Dragon Ball FighterZ</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> My Hero One's Justice 2</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Granblue Fantasy: Versus</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Guilty Gear -Strive-</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Jump Force</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Kingdom Hearts III</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Scarlet Nexus</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Tales of Arise</ComboBoxItem>
                        </ComboBox>
                        <Button FontSize="18" FontWeight="Bold" Name="ConfigButton" Margin="10,0,10,0" Height="35" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Column="1" Content="Setup" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2" Click="Setup_Click" />
                        <Button FontSize="18" FontWeight="Bold" Name="LaunchButton" Margin="0,0,10,0" Height="35" VerticalAlignment="Center" Grid.Column="2" Content="Launch" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2" Click="Launch_Click" HorizontalAlignment="Left" Width="91"/>
                        <CheckBox Name="LaunchCheckbox" Margin="117,25,0,0" VerticalAlignment="Top" Grid.Column="2" HorizontalAlignment="Left" Width="28"/>
                        <TextBlock Margin="101,10,0,0" Foreground="#f2f2f2" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="10" FontWeight="Bold" Grid.Column="2" >
                            Just Copy
                        </TextBlock>
                        <Button FontSize="18" FontWeight="Bold" Name="OpenModsButton" Margin="0,0,10,0" Height="35" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="4" Content="Add Mods" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2" Click="ModsFolder_Click"/>
                        <Button FontSize="18" FontWeight="Bold" Name="UpdateButton" Margin="0,0,10,0"  Height="35" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="5" Content="Update Mods" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2" Click="Update_Click"/>

                        <ComboBox Grid.Column="3" Margin="0,0,10,0" Height="35" FontSize="18" FontWeight="Bold" Name="LauncherOptionsBox"/>

                        <Grid Name="MiddleGrid" Grid.Row="1" Grid.ColumnSpan="7">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.8*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Visibility="Collapsed" Name="DropBox" Margin="10,5,3,3" Panel.ZIndex="2" DragLeave="Add_Leave" DragEnter="Add_Enter" Drop="Add_Drop" AllowDrop="True" Background="Transparent">
                                <Border Opacity="0.7" Background="Black"/>
                                <TextBlock Foreground="#f2f2f2" FontSize="40" Panel.ZIndex="3" VerticalAlignment="Center" HorizontalAlignment="Center">Drop files to create mod</TextBlock>
                            </Grid>
                            <DataGrid DragEnter="Add_Enter" Margin="10,5,3,3" Name="ModGrid" AutoGenerateColumns="False" GridLinesVisibility="None" VerticalScrollBarVisibility="Auto"  BorderBrush="#424242"
                          EnableColumnVirtualization="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False"
                          CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" AlternatingRowBackground="#2A2A2A"
                          dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" HeadersVisibility="Column" 
                          SelectionMode="Single" RowBackground="#202020" Foreground="#f2f2f2" LoadingRow="ModGrid_LoadingRow" HorizontalScrollBarVisibility="Hidden"
                          HorizontalAlignment="Center" Background="#202020" Grid.Column="0" FontSize="12"
                          ContextMenuOpening="ModGrid_ContextMenuOpening" SelectionChanged="ModGrid_SelectionChanged">
                                <DataGrid.Resources>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#006ac1"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="#f2f2f2"/>
                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#006ac1" />
                                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Background" Value="#303030" />
                                        <Setter Property="Foreground" Value="#f2f2f2"/>
                                        <Setter Property="Height" Value="17"/>
                                        <Setter Property="FontSize" Value="12"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                    </Style>
                                </DataGrid.Resources>
				<DataGrid.ColumnHeaderStyle>
					<Style TargetType="DataGridColumnHeader">
						<Setter Property="Background" Value="#303030" />
						<Setter Property="Foreground" Value="#f2f2f2"/>
						<Setter Property="Height" Value="17"/>
						<Setter Property="FontSize" Value="12"/>
						<Setter Property="FontWeight" Value="SemiBold"/>
						<EventSetter Event="Click" Handler="SortAlphabeticallyAndGroupEnabled_Click"/>
					</Style>
				</DataGrid.ColumnHeaderStyle>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Fetch Metadata" IsCheckable="False" Click="FetchItem_Click"/>
                                        <MenuItem Header="Rename Mod" IsCheckable="False" Click="EditItem_Click"/>
                                        <MenuItem Header="Open Mod Folder" IsCheckable="False" Click="OpenItem_Click"/>
                                        <MenuItem Header="Delete Mod" IsCheckable="False" Click="DeleteItem_Click"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding enabled, Mode=TwoWay}" IsReadOnly="False" Width="52">
                                        <DataGridCheckBoxColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <EventSetter Event="CheckBox.Checked" Handler="OnChecked"/>
                                                <EventSetter Event="CheckBox.Unchecked" Handler="OnUnchecked"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="IsEditing" Value="True" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridCheckBoxColumn.CellStyle>
                                    </DataGridCheckBoxColumn>
                                    <DataGridTextColumn Header="Name" Binding="{Binding name, Mode=TwoWay}" IsReadOnly="True" Width="1.5*"/>
                                </DataGrid.Columns>

                            </DataGrid>
                            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="10" Background="Transparent"/>
                            <Grid Grid.Column="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1.5*"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Margin="3,3,10,5" Name="Preview" Grid.Row="0" Panel.ZIndex="2"/>
                                <Image Margin="3,3,10,5" Name="PreviewBG" Grid.Row="0" Stretch="UniformToFill" Panel.ZIndex="1">
                                    <Image.BitmapEffect>
                                        <BlurBitmapEffect Radius="40"/>
                                    </Image.BitmapEffect>
                                </Image>

                                <fa5:ImageAwesome Foreground="#006ac1" Grid.Row="0" Icon="Solid_Spinner" Height="50" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
                                <RichTextBox FontSize="12" Padding="10" Grid.Row="1" Margin="3,5,10,3" Name="DescriptionWindow" Foreground="#F2F2F2" Background="#202020" BorderBrush="#424242" ClipToBounds="False"
                     VerticalContentAlignment="Center" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" IsReadOnly="True" Grid.ColumnSpan="5" IsDocumentEnabled="True"
                             FontWeight="Bold"/>
                            </Grid>
                        </Grid>
                        <GridSplitter Grid.Row="2" Grid.ColumnSpan="6" HorizontalAlignment="Stretch" Height="10" Background="Transparent" />

                        <RichTextBox FontFamily="{StaticResource Monospace}" FontSize="12" Margin="10,3,10,10" Name="ConsoleWindow" Background="#202020" BorderBrush="#424242" ClipToBounds="False" Grid.Row="3" Grid.Column="0" VerticalScrollBarVisibility="Auto" IsReadOnly="True" Grid.ColumnSpan="7" TextChanged="ScrollToBottom">
                            <RichTextBox.Resources>
                                <Style TargetType="{x:Type Paragraph}">
                                    <Setter Property="Margin" Value="0" />
                                </Style>
                            </RichTextBox.Resources>
                        </RichTextBox>
                    </Grid>
                </TabItem.Content>
            </TabItem>
            <TabItem Name="ModBrowser" Selector.Selected="OnBrowserTabSelected" FontSize="18" HorizontalAlignment="Center" Header="Browse Mods">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.RowSpan="3" Name="MediaPanel" Panel.ZIndex="5" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="90"/>
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="4" Grid.ColumnSpan="2" Panel.ZIndex="-1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#080808" Opacity="0.95"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#080808" Opacity="0.95"/>
                            </Border.Background>
                        </Border>
                        <Border>
                            <StackPanel Margin="10" Name="BigImagePanel" VerticalAlignment="Center" Grid.Row="0">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.15*"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="0.15*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button HorizontalAlignment="Right" VerticalAlignment="Center" Click="ImageLeft_Click" Name="BigImageLeft" Content="&lt;" Height="50" Width="50" FontWeight="SemiBold" FontSize="20"/>
                                    <Image Grid.Column="1" Name="BigScreenshot" Stretch="Uniform" Margin="20,0,20,0" VerticalAlignment="Center"/>
                                    <fa5:ImageAwesome Panel.ZIndex="-1" Grid.Column="1" Foreground="#006ac1" Icon="Solid_Spinner" Height="40" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
                                    <Button Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Click="ImageRight_Click" Name="BigImageRight" Content=">" Height="50" Width="50" FontWeight="SemiBold" FontSize="20"/>
                                </Grid>
                                <TextBlock Name="BigCaptionText" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" FontSize="18" Foreground="#f2f2f2" Padding="5"/>
                            </StackPanel>
                        </Border>
                            <StackPanel Grid.ColumnSpan="2" Margin="20" Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <Button Click="CloseMedia_Click" Content="Close" Height="50" Width="200" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="2"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.RowSpan="3" Name="DescPanel" Panel.ZIndex="4" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="2"/>
                            <RowDefinition/>
                            <RowDefinition Height="90"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.RowSpan="4" Grid.ColumnSpan="2" Panel.ZIndex="-1">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#080808" Opacity="0.95"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#080808" Opacity="0.95"/>
                            </Border.Background>
                        </Border>
                        <Border Grid.ColumnSpan="2" BorderThickness="0">
                            <TextBlock Grid.ColumnSpan="2" VerticalAlignment="Center" Text="{Binding Path=Title}" TextTrimming="WordEllipsis" Foreground="#f2f2f2" FontWeight="SemiBold" FontSize="40" Padding="6,3,3,3"/>
                        </Border>
                        <StackPanel Name="ImagePanel" Visibility="Collapsed" VerticalAlignment="Center" Grid.Column="1" Grid.Row="2">
                            <Grid HorizontalAlignment="Center" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.15*"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="0.15*"/>
                                </Grid.ColumnDefinitions>
                                <Button HorizontalAlignment="Right" VerticalAlignment="Center" Click="ImageLeft_Click" Name="ImageLeft" Content="&lt;" Height="50" Width="50" FontWeight="SemiBold" FontSize="20"/>
                                <Image Grid.Column="1" Cursor="Hand" PreviewMouseLeftButtonDown="Image_Click" Name="Screenshot" Stretch="Uniform" MaxHeight="400" Margin="20,0,20,0" VerticalAlignment="Center"/>
                                <fa5:ImageAwesome Panel.ZIndex="-1" Grid.Column="1" Foreground="#006ac1" Icon="Solid_Spinner" Height="40" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
                                <Button Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Click="ImageRight_Click" Name="ImageRight" Content=">" Height="50" Width="50" FontWeight="SemiBold" FontSize="20"/>
                            </Grid>
                            <TextBlock Name="CaptionText" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" FontSize="18" Foreground="#f2f2f2" Padding="5"/>
                        </StackPanel>
                        <Border Grid.Row="1" Grid.ColumnSpan="2" Background="#404040"/>
                        <RichTextBox Margin="5" Name="DescText" Grid.Row="2" Background="Transparent" BorderThickness="0" IsDocumentEnabled="True" VerticalScrollBarVisibility="Auto" IsReadOnly="True" Foreground="#f2f2f2" Padding="10,0,10,10" FontSize="18"/>
                        <StackPanel Grid.ColumnSpan="2" Margin="20" Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center">
                            <Button Name="AltButton" Click="AltDownload_Click" Content="Alt. Downloads" IsEnabled="{Binding Path=Compatible}" Margin="0,0,20,0" Height="50" Width="200" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="2"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <Border Name="DownloadButton" Margin="0,0,20,0" Height="50" Width="200" CornerRadius="2" Background="#006ac1">
                            <Button Margin="3" Click="Download_Click" Content="Download" IsEnabled="{Binding Path=Compatible}" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="2"/>
                                    </Style>
                                </Button.Resources>
                                </Button>
                            </Border>
                            <Button Name="HomepageButton" Click="Homepage_Click" Margin="0,0,20,0" Height="50" Width="200" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="2"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                            <Button Click="CloseDesc_Click" Content="Close" Height="50" Width="200" FontSize="20" FontWeight="SemiBold" Foreground="#f2f2f2">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="2"/>
                                    </Style>
                                </Button.Resources>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <ComboBox IsEnabled="False" Margin="0,0,10,0" Name="GameFilterBox" Height="35" Width="250" FontSize="18" FontWeight="Bold" SelectionChanged="GameFilterSelectionChanged">
                            <ComboBoxItem xml:space="preserve"> Dragon Ball FighterZ</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> My Hero One's Justice 2</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Granblue Fantasy: Versus</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Guilty Gear -Strive-</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Jump Force</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Kingdom Hearts III</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Scarlet Nexus</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Tales of Arise</ComboBoxItem>
                        </ComboBox>
                        <ComboBox IsEnabled="False" Margin="0,0,10,0" Name="FilterBox" Height="35" Width="130" FontSize="18" FontWeight="Bold" SelectionChanged="FilterSelectionChanged">
                            <ComboBoxItem xml:space="preserve"> Featured</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve" IsSelected="True"> Recent</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Popular</ComboBoxItem>
                        </ComboBox>
                        <ComboBox IsEnabled="False" Margin="0,0,10,0" FontWeight="Bold" FontSize="18" Name="TypeBox" Height="35" Width="100" SelectionChanged="TypeFilterSelectionChanged">
                            <ComboBoxItem xml:space="preserve" IsSelected="True"> Mods</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> WiPs</ComboBoxItem>
                            <ComboBoxItem xml:space="preserve"> Sounds</ComboBoxItem>
                        </ComboBox>
                        <ComboBox IsEnabled="False" Margin="0,0,10,0" Name="CatBox" Height="35" Width="150" SelectionChanged="MainFilterSelectionChanged">
                            <ComboBox.ItemTemplate>
                                <DataTemplate >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="0,0,5,0" VerticalAlignment="Center" Height="25" Source="{Binding Path=Icon}"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="15" FontWeight="Bold" Text="{Binding Path=Name}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <ComboBox Margin="0,0,10,0" IsEnabled="False" Name="SubCatBox" Height="35" Width="200" SelectionChanged="SubFilterSelectionChanged">
                            <ComboBox.ItemTemplate>
                                <DataTemplate >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="0,0,5,0" VerticalAlignment="Center" Height="25" Source="{Binding Path=Icon}"/>
                                        <TextBlock VerticalAlignment="Center" FontSize="15" FontWeight="Bold" Text="{Binding Path=Name}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <CheckBox Name="NSFWCheckbox" Unchecked="NSFWCheckbox_Checked" Checked="NSFWCheckbox_Checked"  Margin="0,0,5,0" VerticalAlignment="Center" />
                        <TextBlock Margin="0,0,10,0" Foreground="#f2f2f2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold">
                            Include<LineBreak/>
                            NSFW
                        </TextBlock>
                        <Image Name="GB" VerticalAlignment="Center" HorizontalAlignment="Center" Height="45" Source="../Assets/GameBanana.png" Cursor="Hand" MouseLeftButtonDown="GameBanana_Click"/>
                    </StackPanel>
                    <Popup PlacementTarget="{Binding ElementName=GB}" IsOpen="{Binding IsMouseDirectlyOver, ElementName=GB, Mode=OneWay}" AllowsTransparency="True">
                        <Border CornerRadius="5" Panel.ZIndex="0" Margin="10">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <SolidColorBrush Color="#101010" Opacity="0.9"/>
                            </Border.Background>
                            <TextBlock Margin="10" Text="Go to gamebanana.com" Foreground="#f2f2f2" FontWeight="Bold" FontSize="18" VerticalAlignment="Center" />
                        </Border>
                    </Popup>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="2">
                        <Button IsEnabled="False" Name="PageLeft" Click="DecrementPage" Content="&lt;" HorizontalAlignment="Right" Margin="0,0,15,0" FontSize="18" FontWeight="Bold"  Height="35" Width="35" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2"/>
                        <TextBlock Name="Page" Text="Page 1" Foreground="#f2f2f2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" FontWeight="Bold" />
                        <Button IsEnabled="False" Name="PageRight" Click="IncrementPage" Content=">" HorizontalAlignment="Left" Margin="15,0,0,0" FontSize="18" FontWeight="Bold" Height="35" Width="35" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2"/>
                        <ComboBox IsEnabled="False" Margin="15,0,15,0" Name="PageBox" SelectionChanged="PageBox_SelectionChanged" Height="35" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Margin="5,5,10,5" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2">
                        <TextBlock Margin="0,0,15,0" Foreground="#f2f2f2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="18" FontWeight="Bold">
                            Per Page:
                        </TextBlock>
                        <ComboBox IsEnabled="False" Name="PerPageBox" SelectionChanged="FilterSelectionChanged" Height="35" VerticalAlignment="Center">
                            <ComboBoxItem>10</ComboBoxItem>
                            <ComboBoxItem IsSelected="True">20</ComboBoxItem>
                            <ComboBoxItem>30</ComboBoxItem>
                            <ComboBoxItem>40</ComboBoxItem>
                            <ComboBoxItem>50</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    <Image Panel.ZIndex="-3" Grid.RowSpan="3" x:Name="BrowserBackground" Stretch="UniformToFill">
                        <Image.BitmapEffect>
                            <BlurBitmapEffect Radius="15" />
                        </Image.BitmapEffect>
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                                <TranslateTransform X="-150"/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <fa5:ImageAwesome Name="LoadingBar" Foreground="#006ac1" Panel.ZIndex="1" Grid.Row="1" Icon="Solid_Spinner" Height="110" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="2"/>
                    <StackPanel Name="ErrorPanel" Grid.Row="1" Panel.ZIndex="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Name="BrowserMessage" HorizontalAlignment="Center"  Opacity="1" Background="Transparent" Foreground="#f2f2f2" FontWeight="Bold" TextWrapping="Wrap" Width="800" TextAlignment="Center" FontSize="25"/>
                        <Button Margin="10" Click="BrowserRefresh" Name="BrowserRefreshButton" Content="Retry" HorizontalAlignment="center" FontSize="18" FontWeight="Bold"  Height="40" Width="140" Background="#181818" BorderBrush="#252525" Foreground="#f2f2f2">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5"/>
                                </Style>
                            </Button.Resources>
                        </Button>
                    </StackPanel>
                    <Border Grid.Row="1" CornerRadius="5" Margin="10,0,10,0">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Black" Opacity="0.75"/>
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="Black" Opacity="0.75"/>
                        </Border.Background>
                        <ListView Margin="5" Panel.ZIndex="1" Style="{StaticResource ListviewStyle}" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1" VerticalContentAlignment="Top" ScrollViewer.CanContentScroll="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="Transparent" BorderBrush="Transparent" Name="FeedBox" ItemTemplate="{StaticResource ModTemplate}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Focusable" Value="false"/>
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid SizeChanged="UniformGrid_SizeChanged"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                        </ListView>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>

</Window>
